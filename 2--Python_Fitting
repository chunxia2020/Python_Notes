=================================================================================================
===================================== [1]. 1-D INTERPOLATION ====================================
=================================================================================================
          scipy.interpolate import interp1d
      #---- Original data ------
          x = np.linspace(0, 10, num=11, endpoint=True)
          y = np.cos(-x**2/9.0)
      #---- Interpolation math ------
          f1 = interp1d(x, y)                 # Linear interpolation
          f2 = interp1d(x, y, kind='cubic')   # Cubic  interpolation
      #---- Interpolated data ------
          x_new = np.linspace(0, 10, num=41, endpoint=True)
          y_new_linear = f(x_new)
          y_new_cubic  = f(x_new)
      #---- Plot them out to test -----
          import matplotlib.pyplot as plt
          plt.plot(x, y, 'o', x_new, y_new_linear, '-', x_new, y_new_cubic, '--')
          plt.legend(['data', 'linear', 'cubic'], loc='best')
          plt.show()

=================================================================================================
===================================== [2]. Cubic-Spline INTERPOLATION------1D ===================
=================================================================================================
          from scipy import interpolate
      #---- Original data ------
          x = np.arange(0, 2*np.pi+np.pi/4, 2*np.pi/8)
          y = np.sin(x)
      #---- Interpolation with 1D SPLINE -------
          tck = interpolate.splrep(x, y, s=0)
      #---- Interpolated data ------
          x_new = np.arange(0, 2*np.pi, np.pi/50)
          y_new_spline = interpolate.splev(xnew, tck, der=0)
      #---- Plot them out to test -----
          import matplotlib.pyplot as plt
          plt.plot(xnew, ynew, xnew, np.sin(xnew), x, y, 'b')
          plt.legend(['Cubic Spline', 'True'])
          plt.axis([-0.05, 6.33, -1.05, 1.05])
          plt.title('Cubic-spline interpolation')
          plt.show()  
=================================================================================================
===================================== [2]. Cubic-Spline INTERPOLATION------2D ===================
=================================================================================================
          from scipy import interpolate
      #---- Original data ------
          x, y = np.mgrid[-1:1:20j, -1:1:20j]
          z = (x+y) * np.exp(-6.0*(x*x+y*y))
      #---- Interpolation with 2D SPLINE -------
          tck = interpolate.bisplrep(x, y, z, s=0)
      #---- Interpolated data ------
          xnew, ynew = np.mgrid[-1:1:70j, -1:1:70j]
          znew = interpolate.bisplev(xnew[:,0], ynew[0,:], tck)
      #---- Plot them out to test -----
          plt.figure()
          plt.pcolor(xnew, ynew, znew)
          plt.colorbar()
          plt.title("Interpolated function.")
          plt.show()
